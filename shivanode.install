<?php

/**
 * @file
 * Install file for shivanode module.
 *
 * The definition of the fields for the module is here,
 *
 */
 

 // default name for the SHIVA Rest Service used in hook_enable and hook_disable
define('SHIVA_SERVICE', 'get_shivanode');

require_once('shivanode.inc');

/**
 * Implements hook_install().
 */
function shivanode_install() {
  $t = get_t();
  $shivanode= array(
    'type' => 'shivanode',
    'name' => $t('Shiva Visualization'),
    'base' => 'node_content',
    'description' => $t('Use Shiva visualizations for storing, editing, and displaying a Shanti Interactive Visualization.'),
    'body_label' => $t('Summary'),
    'custom' => TRUE,
  );
  
  // Complete the node type definition by setting any defaults not explicitly
  // declared above.
  // http://api.drupal.org/api/function/node_type_set_defaults/7
  $content_type = node_type_set_defaults($shivanode);

  // Save the content type
  node_type_save($content_type);
  
  // Create all the fields we are adding to our content type.
  // http://api.drupal.org/api/function/field_create_field/7
  foreach (_shivanode_installed_fields() as $field) {
    field_create_field($field);
  }

  // Create all the instances for our fields.
  // http://api.drupal.org/api/function/field_create_instance/7
  foreach (_shivanode_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';  // This is a node entity
    $instance['bundle'] = $shivanode['type'];  // Whose content-type (or bundle) is 'shivanode'
    field_create_instance($instance);
  }
  
  // disable comments for this content type doesn't seem to work
  variable_set('comment_shivanode', COMMENT_NODE_CLOSED);
  
}

/**
 * Implements hook_uninstall().
 */
 
function shivanode_uninstall() {
  // Delete the Shivanode view if it exists
  if (module_exists('views')) {
    $snview = views_get_view('shiva_elements');
    if (isset($snview)) {
      views_delete_view($snview);
    }
  }
  
  // Gather all the example content that might have been created while this
  // module was enabled.  Simple selects still use db_query().
  // http://api.drupal.org/api/function/db_query/7
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'shivanode'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes at once
  // http://api.drupal.org/api/function/node_delete_multiple/7
  node_delete_multiple($nids);

  // Loop over each of the fields defined by this module and delete
  // all instances of the field, their data, and the field itself.
  // http://api.drupal.org/api/function/field_delete_field/7
  foreach (array_keys(_shivanode_installed_fields()) as $field) {
    field_delete_field($field);
  }

  // Loop over any remaining field instances attached to the node_example
  // content type (such as the body field) and delete them individually.
  // http://api.drupal.org/api/function/field_delete_field/7
  $instances = field_info_instances('node', 'shivanode');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete our content type
  // http://api.drupal.org/api/function/node_type_delete/7
  node_type_delete('shivanode');

  // Purge all field infromation
  // http://api.drupal.org/api/function/field_purge_batch/7
  field_purge_batch(1000);
  drupal_uninstall_schema('shivanode');
}

function shivanode_schema() {
  $schema['shivanode_links'] = array(
    'description' => t('A table linking Shiva visualization nodes with Shiva data nodes'),
    'fields' => array(
      'link_id' => array(
        'description' => t('The primary identifier for the link'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'sn_id' => array(
        'description' => t('The node id of the Shivanode visualization using the data'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'data_id' => array(
        'description' => t('The node id of the data node'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'created' => array(
        'description' => t('Date link created'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
    ),
    'unique keys' => array(
      'link_id'     => array('link_id'),
      'sn_id'     => array('sn_id'),
      ),
    'primary key' => array('link_id'),
  );
  return $schema;
}

// add table to database for links between sn and data
/*
function shivanode_update_7001() {
 * use as PHP code:
  include_once DRUPAL_ROOT . '/' . drupal_get_path('module','shivanode') . '/shivanode.install';
  $schema = shivanode_schema();
  db_create_table('shivanode_links', $schema['shivanode_links']);
}
*/

function shivanode_enable() {
  shivanode_create_service();
  if (module_exists('views')) {
    shivanode_create_view();
  } 
  else {
    drupal_set_message(t('Views is not enabled. Unable to create list view.'));
  }
}

/**
 *  Creates a REST api for http://shantivis.org/api/rest/shivanode/### where ### is the node number (shows all Druapl fields)
 * 
 *    FYI: URL for just SHIVA json is http://shantivis.org/data/json/### where ### is the node number (only contains SHIVA info fields)
 */
function shivanode_create_service() {
  $service_name = SHIVA_SERVICE;
  $endpoint = services_endpoint_load($service_name);
  $ea = array('installed', 'install');
  if (!$endpoint) {
    $endpoint = new stdClass();
    $endpoint->disabled = TRUE;
    $endpoint->api_version = 3;
    $endpoint->name = 'get_shivanode';
    $endpoint->server = 'rest_server';
    $endpoint->path = 'api/rest';
    $endpoint->authentication = array(
      'services' => 'services',
    );
    $endpoint->server_settings = array();
    $endpoint->resources = array(
      'shivanode' => array(
        'operations' => array(
          'retrieve' => array(
            'enabled' => 1,
          ),
          'index' => array(
            'enabled' => 1,
          ),
        ),
      ),
    );
    $endpoint->debug = 0;
  } 
  else {
    $endpoint->disabled = FALSE;
    $ea = array('enabled', 'enable');
  }
  services_endpoint_save($endpoint);
  $msg = services_endpoint_load($service_name) ? 
           "'$service_name' REST service " . $ea[0] . "!" : 
           "Unable to " . $ea[1] . " the REST service '$service_name'!";
  $mtyp = (strpos($msg, 'Unable') > -1) ? 'warning':'status';
  drupal_set_message(check_plain($msg), $mtyp);
}

function shivanode_create_view() {
  $snview = views_get_view('shiva_elements');
    if (!isset($snview)) {
      shivanode_build_view();
      $snview = views_get_view('shiva_elements');
      if (isset($snview)) {
        drupal_set_message(check_plain(t('Shiva visualizations list view has been installed!')));
      } 
      else {
        drupal_set_message(check_plain(t('Failed to install Shiva visualizations list view!') . ' (' . $snview . ')'));
      }
    }
}

function shivanode_build_view() {
  $view = new view;
  $view->name = 'shiva_elements';
  $view->description = '';
  $view->tag = 'default';
  $view->base_table = 'node';
  $view->human_name = 'Shiva Visualizations';
  $view->core = 7;
  $view->api_version = '3.0';
  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
  
  /* Display: Master */
  $handler = $view->new_display('default', 'Master', 'default');
  $handler->display->display_options['title'] = 'Recent Shiva Visualizations';
  $handler->display->display_options['access']['type'] = 'perm';
  $handler->display->display_options['cache']['type'] = 'none';
  $handler->display->display_options['query']['type'] = 'views_query';
  $handler->display->display_options['query']['options']['query_comment'] = FALSE;
  $handler->display->display_options['exposed_form']['type'] = 'basic';
  $handler->display->display_options['pager']['type'] = 'full';
  $handler->display->display_options['pager']['options']['items_per_page'] = '25';
  $handler->display->display_options['pager']['options']['offset'] = '0';
  $handler->display->display_options['pager']['options']['id'] = '0';
  $handler->display->display_options['pager']['options']['expose']['items_per_page_options_all'] = 0;
  $handler->display->display_options['style_plugin'] = 'table';
  $handler->display->display_options['style_options']['columns'] = array(
    'title' => 'title',
    'shivanode_element_type' => 'shivanode_element_type',
    'name' => 'name',
    'shivanode_description' => 'shivanode_description',
    'created' => 'created',
  );
  $handler->display->display_options['style_options']['default'] = 'created';
  $handler->display->display_options['style_options']['info'] = array(
    'title' => array(
      'sortable' => 1,
      'default_sort_order' => 'asc',
      'align' => '',
      'separator' => '',
      'empty_column' => 0,
    ),
    'shivanode_element_type' => array(
      'sortable' => 1,
      'default_sort_order' => 'asc',
      'align' => '',
      'separator' => '',
      'empty_column' => 0,
    ),
    'name' => array(
      'sortable' => 1,
      'default_sort_order' => 'asc',
      'align' => '',
      'separator' => '',
      'empty_column' => 0,
    ),
    'shivanode_description' => array(
      'sortable' => 0,
      'default_sort_order' => 'asc',
      'align' => '',
      'separator' => '',
      'empty_column' => 0,
    ),
    'created' => array(
      'sortable' => 1,
      'default_sort_order' => 'desc',
      'align' => '',
      'separator' => '',
      'empty_column' => 0,
    ),
  );
  $handler->display->display_options['style_options']['override'] = 0;
  $handler->display->display_options['style_options']['sticky'] = 0;
  $handler->display->display_options['style_options']['empty_table'] = 0;
  /* Header: Page Top Text */
  $handler->display->display_options['header']['area']['id'] = 'area';
  $handler->display->display_options['header']['area']['table'] = 'views';
  $handler->display->display_options['header']['area']['field'] = 'area';
  $handler->display->display_options['header']['area']['ui_name'] = 'Page Top Text';
  $handler->display->display_options['header']['area']['label'] = 'Shiva Visualization List Description';
  $handler->display->display_options['header']['area']['empty'] = FALSE;
  $handler->display->display_options['header']['area']['content'] = 'This page lists all Shiva Visualizations that have been created.';
  $handler->display->display_options['header']['area']['format'] = 'filtered_html';
  $handler->display->display_options['header']['area']['tokenize'] = 0;
  /* Relationship: Content: Author */
  $handler->display->display_options['relationships']['uid']['id'] = 'uid';
  $handler->display->display_options['relationships']['uid']['table'] = 'node';
  $handler->display->display_options['relationships']['uid']['field'] = 'uid';
  $handler->display->display_options['relationships']['uid']['required'] = 0;
  /* Field: Content: Title */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'node';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['title']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['title']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['title']['alter']['external'] = 0;
  $handler->display->display_options['fields']['title']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['title']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['title']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['title']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['title']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['title']['alter']['more_link'] = 0;
  $handler->display->display_options['fields']['title']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['title']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['title']['alter']['html'] = 0;
  $handler->display->display_options['fields']['title']['element_label_colon'] = 1;
  $handler->display->display_options['fields']['title']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['title']['hide_empty'] = 0;
  $handler->display->display_options['fields']['title']['empty_zero'] = 0;
  $handler->display->display_options['fields']['title']['hide_alter_empty'] = 1;
  $handler->display->display_options['fields']['title']['link_to_node'] = 1;
  /* Field: Content: Type */
  $handler->display->display_options['fields']['shivanode_element_type']['id'] = 'shivanode_element_type';
  $handler->display->display_options['fields']['shivanode_element_type']['table'] = 'field_data_shivanode_element_type';
  $handler->display->display_options['fields']['shivanode_element_type']['field'] = 'shivanode_element_type';
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['external'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['more_link'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['html'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['element_label_colon'] = 1;
  $handler->display->display_options['fields']['shivanode_element_type']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['shivanode_element_type']['hide_empty'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['empty_zero'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['hide_alter_empty'] = 1;
  $handler->display->display_options['fields']['shivanode_element_type']['field_api_classes'] = 0;
  /* Field: User: Name */
  $handler->display->display_options['fields']['name']['id'] = 'name';
  $handler->display->display_options['fields']['name']['table'] = 'users';
  $handler->display->display_options['fields']['name']['field'] = 'name';
  $handler->display->display_options['fields']['name']['relationship'] = 'uid';
  $handler->display->display_options['fields']['name']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['name']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['name']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['name']['alter']['external'] = 0;
  $handler->display->display_options['fields']['name']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['name']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['name']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['name']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['name']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['name']['alter']['more_link'] = 0;
  $handler->display->display_options['fields']['name']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['name']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['name']['alter']['html'] = 0;
  $handler->display->display_options['fields']['name']['element_label_colon'] = 1;
  $handler->display->display_options['fields']['name']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['name']['hide_empty'] = 0;
  $handler->display->display_options['fields']['name']['empty_zero'] = 0;
  $handler->display->display_options['fields']['name']['hide_alter_empty'] = 1;
  $handler->display->display_options['fields']['name']['link_to_user'] = 1;
  $handler->display->display_options['fields']['name']['overwrite_anonymous'] = 0;
  $handler->display->display_options['fields']['name']['format_username'] = 1;
  /* Field: Content: Description */
  $handler->display->display_options['fields']['shivanode_description']['id'] = 'shivanode_description';
  $handler->display->display_options['fields']['shivanode_description']['table'] = 'field_data_shivanode_description';
  $handler->display->display_options['fields']['shivanode_description']['field'] = 'shivanode_description';
  $handler->display->display_options['fields']['shivanode_description']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['shivanode_description']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['shivanode_description']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['shivanode_description']['alter']['external'] = 0;
  $handler->display->display_options['fields']['shivanode_description']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['shivanode_description']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['shivanode_description']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['shivanode_description']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['shivanode_description']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['shivanode_description']['alter']['more_link'] = 0;
  $handler->display->display_options['fields']['shivanode_description']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['shivanode_description']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['shivanode_description']['alter']['html'] = 0;
  $handler->display->display_options['fields']['shivanode_description']['element_label_colon'] = 1;
  $handler->display->display_options['fields']['shivanode_description']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['shivanode_description']['hide_empty'] = 0;
  $handler->display->display_options['fields']['shivanode_description']['empty_zero'] = 0;
  $handler->display->display_options['fields']['shivanode_description']['hide_alter_empty'] = 1;
  $handler->display->display_options['fields']['shivanode_description']['field_api_classes'] = 0;
  /* Field: Content: Post date */
  $handler->display->display_options['fields']['created']['id'] = 'created';
  $handler->display->display_options['fields']['created']['table'] = 'node';
  $handler->display->display_options['fields']['created']['field'] = 'created';
  $handler->display->display_options['fields']['created']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['created']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['created']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['created']['alter']['external'] = 0;
  $handler->display->display_options['fields']['created']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['created']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['created']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['created']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['created']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['created']['alter']['more_link'] = 0;
  $handler->display->display_options['fields']['created']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['created']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['created']['alter']['html'] = 0;
  $handler->display->display_options['fields']['created']['element_label_colon'] = 1;
  $handler->display->display_options['fields']['created']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['created']['hide_empty'] = 0;
  $handler->display->display_options['fields']['created']['empty_zero'] = 0;
  $handler->display->display_options['fields']['created']['hide_alter_empty'] = 1;
  $handler->display->display_options['fields']['created']['date_format'] = 'short';
  $handler->display->display_options['filter_groups']['operator'] = 'OR';
  $handler->display->display_options['filter_groups']['groups'] = array(
    1 => 'AND',
    2 => 'AND',
  );
  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type']['id'] = 'type';
  $handler->display->display_options['filters']['type']['table'] = 'node';
  $handler->display->display_options['filters']['type']['field'] = 'type';
  $handler->display->display_options['filters']['type']['value'] = array(
    'shivanode' => 'shivanode',
  );
  $handler->display->display_options['filters']['type']['group'] = 1;
  /* Filter criterion: User: Current */
  $handler->display->display_options['filters']['uid_current']['id'] = 'uid_current';
  $handler->display->display_options['filters']['uid_current']['table'] = 'users';
  $handler->display->display_options['filters']['uid_current']['field'] = 'uid_current';
  $handler->display->display_options['filters']['uid_current']['relationship'] = 'uid';
  $handler->display->display_options['filters']['uid_current']['value'] = '1';
  $handler->display->display_options['filters']['uid_current']['group'] = 1;
  
  /* Display: Page Full List */
  $handler = $view->new_display('page', 'Page Full List', 'page_1');
  $handler->display->display_options['defaults']['title'] = FALSE;
  $handler->display->display_options['title'] = 'All Shiva Elements';
  $handler->display->display_options['display_description'] = 'Page that lists all SHIVA visualizations';
  $handler->display->display_options['defaults']['header'] = FALSE;
  /* Header: Page Top Text */
  $handler->display->display_options['header']['area']['id'] = 'area';
  $handler->display->display_options['header']['area']['table'] = 'views';
  $handler->display->display_options['header']['area']['field'] = 'area';
  $handler->display->display_options['header']['area']['ui_name'] = 'Page Top Text';
  $handler->display->display_options['header']['area']['label'] = 'Shiva Visualization List Description';
  $handler->display->display_options['header']['area']['empty'] = FALSE;
  $handler->display->display_options['header']['area']['content'] = 'This page lists all Shiva Visualizations that have been created. This list does not include data entries, which store the URL to google spreadsheets. There is a separate <a href="javascript: Drupal.Shivanode.goto(\'datalist\');">list of data entries</a>.';
  $handler->display->display_options['header']['area']['format'] = 'full_html';
  $handler->display->display_options['header']['area']['tokenize'] = 0;
  $handler->display->display_options['defaults']['filters'] = FALSE;
  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type']['id'] = 'type';
  $handler->display->display_options['filters']['type']['table'] = 'node';
  $handler->display->display_options['filters']['type']['field'] = 'type';
  $handler->display->display_options['filters']['type']['value'] = array(
    'shivanode' => 'shivanode',
  );
  $handler->display->display_options['filters']['type']['group'] = 1;
  /* Filter criterion: Content: Type (shivanode_element_type) */
  $handler->display->display_options['filters']['shivanode_element_type_value']['id'] = 'shivanode_element_type_value';
  $handler->display->display_options['filters']['shivanode_element_type_value']['table'] = 'field_data_shivanode_element_type';
  $handler->display->display_options['filters']['shivanode_element_type_value']['field'] = 'shivanode_element_type_value';
  $handler->display->display_options['filters']['shivanode_element_type_value']['operator'] = 'not in';
  $handler->display->display_options['filters']['shivanode_element_type_value']['value'] = array(
    1 => '1',
  );
  $handler->display->display_options['filters']['shivanode_element_type_value']['group'] = 1;
  /* Filter criterion: Content: Published */
  $handler->display->display_options['filters']['status']['id'] = 'status';
  $handler->display->display_options['filters']['status']['table'] = 'node';
  $handler->display->display_options['filters']['status']['field'] = 'status';
  $handler->display->display_options['filters']['status']['value'] = '1';
  $handler->display->display_options['filters']['status']['group'] = 1;
  /* Filter criterion: Content: Privileges (shivanode_access) */
  $handler->display->display_options['filters']['shivanode_access_value']['id'] = 'shivanode_access_value';
  $handler->display->display_options['filters']['shivanode_access_value']['table'] = 'field_data_shivanode_access';
  $handler->display->display_options['filters']['shivanode_access_value']['field'] = 'shivanode_access_value';
  $handler->display->display_options['filters']['shivanode_access_value']['value'] = array(
    4 => '4',
  );
  $handler->display->display_options['filters']['shivanode_access_value']['group'] = 1;
  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type_1']['id'] = 'type_1';
  $handler->display->display_options['filters']['type_1']['table'] = 'node';
  $handler->display->display_options['filters']['type_1']['field'] = 'type';
  $handler->display->display_options['filters']['type_1']['value'] = array(
    'shivanode' => 'shivanode',
  );
  $handler->display->display_options['filters']['type_1']['group'] = 2;
  /* Filter criterion: Content: Type (shivanode_element_type) */
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['id'] = 'shivanode_element_type_value_1';
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['table'] = 'field_data_shivanode_element_type';
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['field'] = 'shivanode_element_type_value';
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['operator'] = 'not in';
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['value'] = array(
    1 => '1',
  );
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['group'] = 2;
  /* Filter criterion: User: Current */
  $handler->display->display_options['filters']['uid_current']['id'] = 'uid_current';
  $handler->display->display_options['filters']['uid_current']['table'] = 'users';
  $handler->display->display_options['filters']['uid_current']['field'] = 'uid_current';
  $handler->display->display_options['filters']['uid_current']['relationship'] = 'uid';
  $handler->display->display_options['filters']['uid_current']['value'] = '1';
  $handler->display->display_options['filters']['uid_current']['group'] = 2;
  $handler->display->display_options['path'] = 'node/elements';
  $handler->display->display_options['menu']['type'] = 'normal';
  $handler->display->display_options['menu']['title'] = 'SHIVA Elements';
  $handler->display->display_options['menu']['description'] = 'A list of all SHIVA visualizations created.';
  $handler->display->display_options['menu']['weight'] = '21';
  $handler->display->display_options['menu']['context'] = 0;
  
  /* Display: Page My List */
  $handler = $view->new_display('page', 'Page My List', 'page_2');
  $handler->display->display_options['defaults']['title'] = FALSE;
  $handler->display->display_options['title'] = 'My Shiva Visualizations';
  $handler->display->display_options['display_description'] = 'Page that lists all SHIVA visualizations';
  $handler->display->display_options['defaults']['header'] = FALSE;
  /* Header: Page Top Text */
  $handler->display->display_options['header']['area']['id'] = 'area';
  $handler->display->display_options['header']['area']['table'] = 'views';
  $handler->display->display_options['header']['area']['field'] = 'area';
  $handler->display->display_options['header']['area']['ui_name'] = 'Page Top Text';
  $handler->display->display_options['header']['area']['label'] = 'Shiva Visualization List Description';
  $handler->display->display_options['header']['area']['empty'] = FALSE;
  $handler->display->display_options['header']['area']['content'] = 'This page lists all Shiva Visualizations that have been created by you.';
  $handler->display->display_options['header']['area']['format'] = 'filtered_html';
  $handler->display->display_options['header']['area']['tokenize'] = 0;
  $handler->display->display_options['defaults']['filters'] = FALSE;
  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type']['id'] = 'type';
  $handler->display->display_options['filters']['type']['table'] = 'node';
  $handler->display->display_options['filters']['type']['field'] = 'type';
  $handler->display->display_options['filters']['type']['value'] = array(
    'shivanode' => 'shivanode',
  );
  $handler->display->display_options['filters']['type']['group'] = 1;
  /* Filter criterion: User: Current */
  $handler->display->display_options['filters']['uid_current']['id'] = 'uid_current';
  $handler->display->display_options['filters']['uid_current']['table'] = 'users';
  $handler->display->display_options['filters']['uid_current']['field'] = 'uid_current';
  $handler->display->display_options['filters']['uid_current']['relationship'] = 'uid';
  $handler->display->display_options['filters']['uid_current']['value'] = '1';
  $handler->display->display_options['filters']['uid_current']['group'] = 1;
  $handler->display->display_options['path'] = 'node/my-elements';
  
  /* Display: Block */
  $handler = $view->new_display('block', 'Block', 'block_1');
  $handler->display->display_options['defaults']['pager'] = FALSE;
  $handler->display->display_options['pager']['type'] = 'full';
  $handler->display->display_options['pager']['options']['items_per_page'] = '25';
  $handler->display->display_options['pager']['options']['offset'] = '0';
  $handler->display->display_options['pager']['options']['id'] = '0';
  $handler->display->display_options['pager']['options']['expose']['items_per_page_options_all'] = 0;
  $handler->display->display_options['defaults']['header'] = FALSE;
  $handler->display->display_options['defaults']['sorts'] = FALSE;
  /* Sort criterion: Content: Post date */
  $handler->display->display_options['sorts']['created']['id'] = 'created';
  $handler->display->display_options['sorts']['created']['table'] = 'node';
  $handler->display->display_options['sorts']['created']['field'] = 'created';
  $handler->display->display_options['sorts']['created']['order'] = 'DESC';
  /* Sort criterion: Content: Title */
  $handler->display->display_options['sorts']['title']['id'] = 'title';
  $handler->display->display_options['sorts']['title']['table'] = 'node';
  $handler->display->display_options['sorts']['title']['field'] = 'title';
  $handler->display->display_options['sorts']['title']['exposed'] = TRUE;
  $handler->display->display_options['sorts']['title']['expose']['label'] = 'Title';
  /* Sort criterion: User: Name */
  $handler->display->display_options['sorts']['name']['id'] = 'name';
  $handler->display->display_options['sorts']['name']['table'] = 'users';
  $handler->display->display_options['sorts']['name']['field'] = 'name';
  $handler->display->display_options['sorts']['name']['relationship'] = 'uid';
  $handler->display->display_options['sorts']['name']['exposed'] = TRUE;
  $handler->display->display_options['sorts']['name']['expose']['label'] = 'Name';
  $handler->display->display_options['defaults']['filters'] = FALSE;
  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type']['id'] = 'type';
  $handler->display->display_options['filters']['type']['table'] = 'node';
  $handler->display->display_options['filters']['type']['field'] = 'type';
  $handler->display->display_options['filters']['type']['value'] = array(
    'shivanode' => 'shivanode',
  );
  $handler->display->display_options['filters']['type']['group'] = 1;
  /* Filter criterion: Content: Type (shivanode_element_type) */
  $handler->display->display_options['filters']['shivanode_element_type_value']['id'] = 'shivanode_element_type_value';
  $handler->display->display_options['filters']['shivanode_element_type_value']['table'] = 'field_data_shivanode_element_type';
  $handler->display->display_options['filters']['shivanode_element_type_value']['field'] = 'shivanode_element_type_value';
  $handler->display->display_options['filters']['shivanode_element_type_value']['operator'] = 'not in';
  $handler->display->display_options['filters']['shivanode_element_type_value']['value'] = array(
    1 => '1',
  );
  $handler->display->display_options['filters']['shivanode_element_type_value']['group'] = 1;
  /* Filter criterion: Content: Privileges (shivanode_access) */
  $handler->display->display_options['filters']['shivanode_access_value']['id'] = 'shivanode_access_value';
  $handler->display->display_options['filters']['shivanode_access_value']['table'] = 'field_data_shivanode_access';
  $handler->display->display_options['filters']['shivanode_access_value']['field'] = 'shivanode_access_value';
  $handler->display->display_options['filters']['shivanode_access_value']['value'] = array(
    4 => '4',
  );
  $handler->display->display_options['filters']['shivanode_access_value']['group'] = 1;
  /* Filter criterion: Content: Published */
  $handler->display->display_options['filters']['status']['id'] = 'status';
  $handler->display->display_options['filters']['status']['table'] = 'node';
  $handler->display->display_options['filters']['status']['field'] = 'status';
  $handler->display->display_options['filters']['status']['value'] = '1';
  $handler->display->display_options['filters']['status']['group'] = 1;
  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type_1']['id'] = 'type_1';
  $handler->display->display_options['filters']['type_1']['table'] = 'node';
  $handler->display->display_options['filters']['type_1']['field'] = 'type';
  $handler->display->display_options['filters']['type_1']['value'] = array(
    'shivanode' => 'shivanode',
  );
  $handler->display->display_options['filters']['type_1']['group'] = 2;
  /* Filter criterion: Content: Type (shivanode_element_type) */
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['id'] = 'shivanode_element_type_value_1';
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['table'] = 'field_data_shivanode_element_type';
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['field'] = 'shivanode_element_type_value';
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['operator'] = 'not in';
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['value'] = array(
    1 => '1',
  );
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['group'] = 2;
  /* Filter criterion: User: Current */
  $handler->display->display_options['filters']['uid_current']['id'] = 'uid_current';
  $handler->display->display_options['filters']['uid_current']['table'] = 'users';
  $handler->display->display_options['filters']['uid_current']['field'] = 'uid_current';
  $handler->display->display_options['filters']['uid_current']['relationship'] = 'uid';
  $handler->display->display_options['filters']['uid_current']['value'] = '1';
  $handler->display->display_options['filters']['uid_current']['group'] = 2;
  $handler->display->display_options['block_description'] = 'Shivanode List Block';
  
  /* Display: Popup */
  $handler = $view->new_display('block', 'Popup', 'data_popup_block');
  $handler->display->display_options['defaults']['pager'] = FALSE;
  $handler->display->display_options['pager']['type'] = 'mini';
  $handler->display->display_options['pager']['options']['items_per_page'] = '25';
  $handler->display->display_options['pager']['options']['offset'] = '0';
  $handler->display->display_options['pager']['options']['id'] = '0';
  $handler->display->display_options['pager']['options']['expose']['items_per_page_options_all'] = 0;
  $handler->display->display_options['defaults']['header'] = FALSE;
  $handler->display->display_options['defaults']['fields'] = FALSE;
  /* Field: Content: Title */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'node';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['title']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['title']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['title']['alter']['external'] = 0;
  $handler->display->display_options['fields']['title']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['title']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['title']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['title']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['title']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['title']['alter']['more_link'] = 0;
  $handler->display->display_options['fields']['title']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['title']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['title']['alter']['html'] = 0;
  $handler->display->display_options['fields']['title']['element_label_colon'] = 1;
  $handler->display->display_options['fields']['title']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['title']['hide_empty'] = 0;
  $handler->display->display_options['fields']['title']['empty_zero'] = 0;
  $handler->display->display_options['fields']['title']['hide_alter_empty'] = 1;
  $handler->display->display_options['fields']['title']['link_to_node'] = 1;
  /* Field: Content: Type */
  $handler->display->display_options['fields']['shivanode_element_type']['id'] = 'shivanode_element_type';
  $handler->display->display_options['fields']['shivanode_element_type']['table'] = 'field_data_shivanode_element_type';
  $handler->display->display_options['fields']['shivanode_element_type']['field'] = 'shivanode_element_type';
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['external'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['more_link'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['alter']['html'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['element_label_colon'] = 1;
  $handler->display->display_options['fields']['shivanode_element_type']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['shivanode_element_type']['hide_empty'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['empty_zero'] = 0;
  $handler->display->display_options['fields']['shivanode_element_type']['hide_alter_empty'] = 1;
  $handler->display->display_options['fields']['shivanode_element_type']['field_api_classes'] = 0;
  /* Field: User: Name */
  $handler->display->display_options['fields']['name']['id'] = 'name';
  $handler->display->display_options['fields']['name']['table'] = 'users';
  $handler->display->display_options['fields']['name']['field'] = 'name';
  $handler->display->display_options['fields']['name']['relationship'] = 'uid';
  $handler->display->display_options['fields']['name']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['name']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['name']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['name']['alter']['external'] = 0;
  $handler->display->display_options['fields']['name']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['name']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['name']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['name']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['name']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['name']['alter']['more_link'] = 0;
  $handler->display->display_options['fields']['name']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['name']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['name']['alter']['html'] = 0;
  $handler->display->display_options['fields']['name']['element_label_colon'] = 1;
  $handler->display->display_options['fields']['name']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['name']['hide_empty'] = 0;
  $handler->display->display_options['fields']['name']['empty_zero'] = 0;
  $handler->display->display_options['fields']['name']['hide_alter_empty'] = 1;
  $handler->display->display_options['fields']['name']['link_to_user'] = 1;
  $handler->display->display_options['fields']['name']['overwrite_anonymous'] = 0;
  $handler->display->display_options['fields']['name']['format_username'] = 1;
  $handler->display->display_options['defaults']['filters'] = FALSE;
  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type_1']['id'] = 'type_1';
  $handler->display->display_options['filters']['type_1']['table'] = 'node';
  $handler->display->display_options['filters']['type_1']['field'] = 'type';
  $handler->display->display_options['filters']['type_1']['value'] = array(
    'shivanode' => 'shivanode',
  );
  $handler->display->display_options['filters']['type_1']['group'] = 1;
  /* Filter criterion: Content: Type (shivanode_element_type) */
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['id'] = 'shivanode_element_type_value_1';
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['table'] = 'field_data_shivanode_element_type';
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['field'] = 'shivanode_element_type_value';
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['value'] = array(
    1 => '1',
  );
  $handler->display->display_options['filters']['shivanode_element_type_value_1']['group'] = 1;
  /* Filter criterion: User: Current */
  $handler->display->display_options['filters']['uid_current']['id'] = 'uid_current';
  $handler->display->display_options['filters']['uid_current']['table'] = 'users';
  $handler->display->display_options['filters']['uid_current']['field'] = 'uid_current';
  $handler->display->display_options['filters']['uid_current']['relationship'] = 'uid';
  $handler->display->display_options['filters']['uid_current']['value'] = '1';
  $handler->display->display_options['filters']['uid_current']['group'] = 1;
  $handler->display->display_options['block_description'] = 'Shivanode List Block';

  views_save_view($view);
}

function shivanode_disable() {
  $endpoint = services_endpoint_load(SHIVA_SERVICE);
  if ($endpoint) {
    $endpoint->disabled = TRUE;
    services_endpoint_save($endpoint);
  }
}

/**
 * Change the actual field sizes for the values in the data and revisions tables
 */
function shivanode_update_7000() {
  $table = 'field_data_shivanode_json';
  $field = $field_new = 'shivanode_json_value';
  $spec = array(
    'type' => 'text',
    'size' => 'big',
    'not null' => FALSE,
  );
  db_change_field($table, $field, $field_new, $spec);
  $table = 'field_revision_shivanode_json';
  db_change_field($table, $field, $field_new, $spec);
}

/**
* Change the field definition in the field_config table to text_long
*/
function shivanode_update_7001() {
  $field = db_select('field_config', 'fc')
    ->fields('fc')
    ->condition('field_name', 'shivanode_json')
    ->execute()
    ->fetchAssoc();
  $def = $field['data']; // Get the data blob defining the field
  // Replace the max length definition with no settings
  $old = 's:8:"settings";a:1:{s:10:"max_length";i:2048;}';
  $new = 's:8:"settings";a:0:{}';
  $def = str_replace($old, $new, $def);
  // set new def and change type to text_long
  $num_updated = db_update('field_config')
    ->fields(array(
      'type' => 'text_long',
      'data' => $def,
    ))
    ->condition('field_name', 'shivanode_json')
    ->execute();
}

/**
* Change the description on the Data Popup list block so it doesn't match the recent shiva elements block.
*/
function shivanode_update_7002() {
  if (module_exists('views')) {
    $view = views_get_view('shiva_elements');
    if ($view) {
      $dblock = &$view->display['data_popup_block'];
      if($dblock) {
        $dopts = &$dblock->display_options;
        $dopts['block_description'] = "Shivanode Data Popup Block";
        views_save_view($view);
      }
    }
  }
}

/**
 * Update to the label of shivanode_access field instance, changing from "Privileges" to "Status"
 */
 
function shivanode_update_7003() {
  $instances = field_info_instances('node', 'shivanode');
  $safield = $instances['shivanode_access'];
  $safield['label'] = "Status";
  field_update_instance($safield);
}
